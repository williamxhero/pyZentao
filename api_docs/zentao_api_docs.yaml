openapi: 3.0.0
info:
  title: Zentao API
  version: 开源版21.6.beta
  description: '禅道版本: 开源版21.6.beta

    爬取时间: 2025-04-09 14:40:05

    API文档URL: http://192.168.0.72/zentao/dev-api-restapi.html

    账号: the_account'
servers:
- url: http://192.168.0.72/zentao/dev-api-restapi.html
paths:
  /bugs/{id}:
    delete:
      tags:
      - bugs
      operationId: deleteBugs
      summary: 删除Bug
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBugsResponse'
              example:
                message: success
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    get:
      tags:
      - bugs
      operationId: getBugs
      summary: 获取Bug详情
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BugsResponse'
              example:
                id: 1
                project: 7
                product: 1
                branch: 0
                module: 0
                execution: 1
                plan: 0
                story: 1
                storyVersion: 1
                task: 1
                toTask: 0
                toStory: 0
                title: aaa
                keywords: ''
                severity: 3
                pri: 1
                type: codeerror
                os: ''
                browser: ''
                hardware: ''
                found: ''
                steps: "<p>[步骤]进入首页</p>\r\n<p>[结果]出现乱码&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\
                  \n<p>[期望]正常显示</p>"
                status: active
                subStatus: ''
                color: ''
                confirmed: 0
                activatedCount: 0
                activatedDate: '1969-12-31T16:00:00Z'
                feedbackBy: ''
                notifyEmail: ''
                mailto: []
                openedBy:
                  id: 7
                  account: tester1
                  avatar: ''
                  realname: 测试甲
                openedDate: '2012-06-05T02:56:11Z'
                openedBuild: trunk
                assignedTo:
                  id: 4
                  account: dev1
                  avatar: ''
                  realname: 开发甲
                assignedDate: '1969-12-31T16:00:00Z'
                deadline: null
                resolvedBy: null
                resolution: ''
                resolvedBuild: ''
                resolvedDate: null
                closedBy: null
                closedDate: '1969-12-31T16:00:00Z'
                duplicateBug: 0
                linkBug: ''
                case: 0
                caseVersion: 1
                result: 0
                repo: 0
                entry: ''
                lines: ''
                v1: ''
                v2: ''
                repoType: ''
                testtask: 0
                lastEditedBy:
                  id: 1
                  account: admin
                  avatar: ''
                  realname: 管理员
                lastEditedDate: '2021-12-05T14:53:35Z'
                deleted: false
                executionName: 企业网站第一期
                storyTitle: 首页设计和开发
                storyStatus: active
                latestStoryVersion: 2
                taskName: null
                planName: null
                projectName: 企业管理系统
                toCases: []
                files: []
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    put:
      tags:
      - bugs
      operationId: putBugs
      summary: 修改Bug
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBugsResponse'
              example:
                title: Bug2
                severity: 1
                pri: 1
                steps: ''
                type: codeerror
                openedBuild:
                - trunk
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /builds/{id}:
    delete:
      tags:
      - builds
      operationId: deleteBuilds
      summary: 删除版本
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBuildsResponse'
              example:
                id: 3
                project: 41
                product: 4
                branch: 0
                execution: 42
                name: test
                scmPath: ''
                filePath: ''
                date: '2021-01-01'
                stories: ''
                bugs: ''
                builder: admin
                desc: ''
                deleted: '0'
                executionName: testt
                productName: 多分支产品
                productType: branch
                files: []
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    get:
      tags:
      - builds
      operationId: getBuilds
      summary: 获取版本详情
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildsResponse'
              example:
                id: 3
                project: 41
                product: 4
                branch: 0
                execution: 42
                name: test
                scmPath: ''
                filePath: ''
                date: '2021-01-01'
                stories: ''
                bugs: ''
                builder: admin
                desc: ''
                deleted: '0'
                executionName: testt
                productName: 多分支产品
                productType: branch
                files: []
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    put:
      tags:
      - builds
      operationId: putBuilds
      summary: 修改版本
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBuildsResponse'
              example:
                id: 3
                project: 41
                product: 4
                branch: 0
                execution: 42
                name: test
                scmPath: ''
                filePath: ''
                date: '2021-01-01'
                stories: ''
                bugs: ''
                builder: admin
                desc: ''
                deleted: '0'
                executionName: testt
                productName: 多分支产品
                productType: branch
                files: []
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /executions/{id}:
    delete:
      tags:
      - executions
      operationId: deleteExecutions
      summary: 删除执行
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteExecutionsResponse'
              example: "{\n    ”message\": \"success\"\n}"
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    get:
      tags:
      - executions
      operationId: getExecutions
      summary: 查看执行详情
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionsResponse'
              example:
                id: 40
                project: 12
                model: ''
                type: sprint
                lifetime: ''
                budget: '0'
                budgetUnit: CNY
                attribute: ''
                percent: 0
                milestone: '0'
                output: ''
                auth: ''
                parent: 12
                path: ',12,40,'
                grade: 1
                name: 测试执行1111111
                code: test1111111
                begin: '2021-12-01'
                end: '2021-12-11'
                realBegan: '0000-00-00'
                realEnd: '0000-00-00'
                days: 100
                status: wait
                subStatus: ''
                pri: '1'
                desc: ''
                version: 0
                parentVersion: 0
                planDuration: 0
                realDuration: 0
                openedBy: admin
                openedDate: '2021-11-28T15:37:59Z'
                openedVersion: '15.8'
                lastEditedBy: admin
                lastEditedDate: '2021-11-28T15:37:59Z'
                closedBy: ''
                closedDate: null
                canceledBy: ''
                canceledDate: null
                PO: ''
                PM: ''
                QD: ''
                RD: ''
                team: 测试执行1111111
                acl: private
                whitelist: ','
                order: 200
                deleted: '0'
                totalHours: 700
                totalEstimate: 0
                totalConsumed: 0
                totalLeft: 0
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    put:
      tags:
      - executions
      operationId: putExecutions
      summary: 修改执行
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateExecutionsResponse'
              example:
                name: 测试执行1
                code: test1
                begin: '2021-12-01'
                end: '2021-12-11'
                days: 10
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /feedbacks/{id}:
    delete:
      tags:
      - feedbacks
      operationId: deleteFeedbacks
      summary: 删除反馈
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFeedbacksResponse'
              example:
                message: success
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    get:
      tags:
      - feedbacks
      operationId: getFeedbacks
      summary: 获取反馈详情
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbacksResponse'
              example:
                id: 4
                product: 2
                module: 0
                title: 一个反馈
                type: ''
                solution: ''
                desc: ''
                status: wait
                subStatus: ''
                public: '0'
                notify: '1'
                notifyEmail: ''
                likes: ''
                result: 0
                faq: 0
                openedBy:
                  id: 1
                  account: admin
                  avatar: ''
                  realname: admin
                openedDate: '2022-06-10T03:18:52Z'
                reviewedBy: ''
                reviewedDate: '0000-00-00 00:00:00'
                processedBy: ''
                processedDate: '0000-00-00 00:00:00'
                closedBy: null
                closedDate: null
                closedReason: ''
                editedBy: admin
                editedDate: '2022-06-10 11:18:52'
                assignedTo: null
                assignedDate: '2022-06-10T03:18:52Z'
                feedbackBy: ''
                mailto: []
                deleted: false
                likesCount: 0
                files: []
                likeIcon: thumbs-up
                publicStatus: '0'
                productName: 产品X
                moduleName: /
                resultType: ''
                actions:
                - id: 163
                  objectType: feedback
                  objectID: 4
                  product: ',0,'
                  project: 0
                  execution: 0
                  actor: admin
                  action: opened
                  date: '2022-06-10 11:18:52'
                  comment: ''
                  extra: ''
                  read: '0'
                  vision: rnd
                  efforted: 0
                  history: []
                  desc: '2022-06-10 11:18:52, 由 <strong>admin</strong> 创建。

                    '
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    put:
      tags:
      - feedbacks
      operationId: putFeedbacks
      summary: 修改反馈
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFeedbacksResponse'
              example:
                title: test
                desc: edit test
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /productsplan/{id}:
    delete:
      tags:
      - productsplan
      operationId: deleteProductsplan
      summary: 删除计划
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProductsplanResponse'
              example:
                message: success
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /product/{id}:
    delete:
      tags:
      - product
      operationId: deleteProduct
      summary: 删除产品
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProductResponse'
              example:
                message: success
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    put:
      tags:
      - product
      operationId: putProduct
      summary: 编辑产品
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: false
        description: 访问凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductResponse'
              example:
                name: 公司企业网站建设1
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /programs/{id}:
    delete:
      tags:
      - programs
      operationId: deletePrograms
      summary: 删除项目集
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProgramsResponse'
              example:
                message: sucess
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    get:
      tags:
      - programs
      operationId: getPrograms
      summary: 获取项目集详情
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramsResponse'
              example:
                id: 14
                project: 0
                model: ''
                type: program
                lifetime: ''
                budget: '11111'
                budgetUnit: CNY
                attribute: ''
                percent: 0
                milestone: '0'
                output: ''
                auth: ''
                parent: 0
                path: ',14,'
                grade: 1
                name: 测试项目集
                code: ''
                begin: '2021-11-26'
                end: '2021-12-26'
                realBegan: null
                realEnd: null
                days: 0
                status: wait
                subStatus: ''
                pri: '1'
                desc: ''
                version: 0
                parentVersion: 0
                planDuration: 0
                realDuration: 0
                openedBy:
                  id: 1
                  account: admin
                  avatar: ''
                  realname: 管理员
                openedDate: '2021-11-26T10:05:51Z'
                openedVersion: ''
                lastEditedBy: ''
                lastEditedDate: null
                closedBy: null
                closedDate: null
                canceledBy: null
                canceledDate: null
                PO: null
                PM:
                  id: 1
                  account: admin
                  avatar: ''
                  realname: 管理员
                QD: null
                RD: null
                team: ''
                acl: private
                whitelist: []
                order: 70
                deleted: false
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    put:
      tags:
      - programs
      operationId: putPrograms
      summary: 修改项目集
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProgramsResponse'
              example:
                name: 项目集
                PM: admin
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /projects/{id}:
    delete:
      tags:
      - projects
      operationId: deleteProjects
      summary: 删除项目
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProjectsResponse'
              example:
                message: success
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    get:
      tags:
      - projects
      operationId: getProjects
      summary: 获取项目详情
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsResponse'
              example:
                id: 7
                project: 0
                model: scrum
                type: project
                lifetime: sprint
                budget: '0'
                budgetUnit: CNY
                attribute: ''
                percent: 0
                milestone: '0'
                output: ''
                auth: extend
                parent: 6
                path: ',6,7,'
                grade: 2
                name: 企业管理系统
                code: ''
                begin: '2021-06-05'
                end: '2022-06-04'
                realBegan: null
                realEnd: null
                days: 0
                status: doing
                subStatus: ''
                pri: '1'
                desc: ''
                version: 0
                parentVersion: 0
                planDuration: 0
                realDuration: 0
                openedBy: admin
                openedDate: '2021-04-28T03:22:04Z'
                openedVersion: 15.0.rc3
                lastEditedBy: admin
                lastEditedDate: '2021-04-28T03:22:04Z'
                closedBy: ''
                closedDate: null
                canceledBy: ''
                canceledDate: null
                PO: ''
                PM: projectManager
                QD: ''
                RD: ''
                team: ''
                acl: open
                whitelist: ',tester3,admin'
                order: 35
                deleted: false
                caseReview: false
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    put:
      tags:
      - projects
      operationId: putProjects
      summary: 修改项目
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectsResponse'
              example:
                name: 修改项目
                PM: admin
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /stories/{id}:
    delete:
      tags:
      - stories
      operationId: deleteStories
      summary: 删除需求
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteStoriesResponse'
              example:
                message: success
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    get:
      tags:
      - stories
      operationId: getStories
      summary: 获取需求详情
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoriesResponse'
              example:
                id: 14
                parent: 0
                product: 1
                branch: 0
                module: 0
                plan: ''
                source: ''
                sourceNote: ''
                fromBug: 0
                title: 测试需求
                keywords: ''
                type: story
                category: feature
                pri: 1
                estimate: 0
                status: active
                subStatus: ''
                color: ''
                stage: wait
                stagedBy: ''
                mailto: null
                openedBy: admin
                openedDate: '2021-11-29T01:18:02Z'
                assignedTo: ''
                assignedDate: null
                lastEditedBy: ''
                lastEditedDate: null
                reviewedBy: ''
                reviewedDate: null
                closedBy: ''
                closedDate: null
                closedReason: ''
                toBug: 0
                childStories: ''
                linkStories: ''
                duplicateStory: 0
                version: 1
                URChanged: '0'
                deleted: false
                spec: 测试
                verify: ''
                executions: []
                tasks: []
                stages: []
                children: []
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    put:
      tags:
      - stories
      operationId: putStories
      summary: 修改需求其他字段
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStoriesResponse'
              example:
                category: other
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /tasks/{id}:
    delete:
      tags:
      - tasks
      operationId: deleteTasks
      summary: 删除任务
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTasksResponse'
              example: "{\n    “message”: \"success\"\n}"
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    get:
      tags:
      - tasks
      operationId: getTasks
      summary: 获取任务详情
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TasksResponse'
              example:
                id: 22
                project: 41
                parent: 0
                execution: 42
                module: 0
                design: 0
                story: 0
                storyVersion: 1
                designVersion: 0
                fromBug: 0
                name: 多人任务
                type: devel
                pri: 3
                estimate: 2
                consumed: 0
                left: 2
                deadline: '2021-12-23'
                status: wait
                subStatus: ''
                color: ''
                mailto: []
                desc: ''
                version: 1
                openedBy:
                  id: 1
                  account: admin
                  avatar: ''
                  realname: 管理员
                openedDate: '2021-12-05T12:00:57Z'
                assignedTo:
                  id: 1
                  account: admin
                  avatar: ''
                  realname: 管理员
                assignedDate: '2021-12-05T12:00:57Z'
                estStarted: '2021-12-05'
                realStarted: null
                finishedBy: null
                finishedDate: null
                finishedList: ''
                canceledBy: null
                canceledDate: null
                closedBy: null
                closedDate: null
                planDuration: 0
                realDuration: 0
                closedReason: ''
                lastEditedBy: null
                lastEditedDate: null
                activatedDate: ''
                deleted: false
                storyID: null
                storyTitle: null
                latestStoryVersion: null
                storyStatus: null
                assignedToRealName: 管理员
                children: []
                team:
                - id: 50
                  root: 22
                  type: task
                  account: admin
                  role: ''
                  limited: 'no'
                  join: '2021-12-05'
                  days: 0
                  hours: 0
                  estimate: 1
                  consumed: 0
                  left: 1
                  order: 0
                  realname: 管理员
                  avatar: ''
                  progress: 0
                - id: 51
                  root: 22
                  type: task
                  account: productManager
                  role: ''
                  limited: 'no'
                  join: '2021-12-05'
                  days: 0
                  hours: 0
                  estimate: 1
                  consumed: 0
                  left: 1
                  order: 1
                  realname: 产品经理
                  avatar: ''
                  progress: 0
                files: []
                needConfirm: false
                progress: 0
                storySpec: ''
                storyVerify: ''
                storyFiles: []
                executionName: testt
                moduleTitle: /
                actions:
                - id: 1253748
                  objectType: task
                  objectID: 22
                  product: ',4,'
                  project: 41
                  execution: 42
                  actor: 管理员
                  action: opened
                  date: '2021-12-05 20:00:57'
                  comment: ''
                  extra: ''
                  read: '1'
                  history: []
                  desc: '2021-12-05 20:00:57, 由 <strong>管理员</strong> 创建。

                    '
                preAndNext:
                  pre: ''
                  next: ''
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    put:
      tags:
      - tasks
      operationId: putTasks
      summary: 修改任务
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTasksResponse'
              example:
                name: testtt
                assignedTo:
                - admin
                type: devel
                estStarted: '2021-12-01'
                deadline: '2021-12-31'
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /testcases/{id}:
    delete:
      tags:
      - testcases
      operationId: deleteTestcases
      summary: 删除用例
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTestcasesResponse'
              example:
                message: success
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    get:
      tags:
      - testcases
      operationId: getTestcases
      summary: 获取用例详情
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestcasesResponse'
              example:
                id: 9
                project: 0
                product: 1
                execution: 0
                branch: 0
                lib: 0
                module: 0
                path: 0
                story: 0
                storyVersion: 1
                title: case1
                precondition: ''
                keywords: ''
                pri: 1
                type: feature
                auto: 'no'
                frame: ''
                stage: ''
                howRun: ''
                scriptedBy: ''
                scriptedDate: null
                scriptStatus: ''
                scriptLocation: ''
                status: normal
                subStatus: ''
                color: ''
                frequency: '1'
                order: 0
                openedBy:
                  id: 1
                  account: admin
                  avatar: ''
                  realname: 管理员
                openedDate: '2021-11-29T07:24:42Z'
                reviewedBy: null
                reviewedDate: null
                lastEditedBy: null
                lastEditedDate: null
                version: 1
                linkCase: ''
                fromBug: 0
                fromCaseID: 0
                fromCaseVersion: 1
                deleted: false
                lastRunner: ''
                lastRunDate: null
                lastRunResult: ''
                toBugs: []
                steps:
                - id: 6
                  parent: 0
                  case: 9
                  version: 1
                  type: step
                  desc: 步骤1
                  expect: 结果1
                files: []
                currentVersion: 1
                caseFails: 0
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    put:
      tags:
      - testcases
      operationId: putTestcases
      summary: 修改用例
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTestcasesResponse'
              example:
                title: case1
                pri: 1
                steps:
                - desc: 步骤1
                  expect: 结果1
                type: feature
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /tickets/{id}:
    delete:
      tags:
      - tickets
      operationId: deleteTickets
      summary: 删除工单
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTicketsResponse'
              example:
                message: success
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    get:
      tags:
      - tickets
      operationId: getTickets
      summary: 获取工单详情
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketsResponse'
              example: "{\n    \"id\": 5,\n    \"product\": 80,\n    \"module\": 80,\n\
                \    \"title\": \"测试工单\",\n    \"type\": \"\",\n    \"desc\": \"\"\
                ,\n    \"openedBuild\": \"\",\n    \"feedback\": 0,\n    \"assignedTo\"\
                : null,\n    \"assignedDate\": null,\n    \"realStarted\": \"0000-00-00\
                \ 00:00:00\",\n    \"startedBy\": \"\",\n    \"startedDate\": \"\"\
                ,\n    \"deadline\": null,\n    \"pri\": 0,\n    \"estimate\": 0,\n\
                \    \"left\": 0,\n    \"status\": \"wait\",\n    \"openedBy\": {\n\
                \        \"id\": 4,\n        \"account\": \"admin\",\n        \"avatar\"\
                : \"/data/upload/1/202104/02151445087773h0\",\n        \"realname\"\
                : \"管理员\"\n    },\n    \"openedDate\": \"2022-12-21T07:43:33Z\",\n\
                \    \"activatedCount\": 0,\n    \"activatedBy\": \"\",\n    \"activatedDate\"\
                : null,\n    \"closedBy\": null,\n    \"closedDate\": null,\n    \"\
                closedReason\": \"\",\n    \"finishedBy\": \"\",\n    \"finishedDate\"\
                : \"\",\n    \"resolvedBy\": null,\n    \"resolvedDate\": null,\n\
                \    \"resolution\": \"\",\n    \"editedBy\": \"admin\",\n    \"editedDate\"\
                : \"2022-12-22 10:29:27\",\n    \"keywords\": \"\",\n    \"repeatTicket\"\
                : 0,\n    \"mailto\": [],\n    \"deleted\": false,\n    \"consumed\"\
                : 0,\n    \"createFiles\": [],\n    \"finishFiles\": [],\n    \"productName\"\
                : null,\n    \"moduleName\": \"/\",\n    \"actions\": [\n        {\n\
                \            \"id\": 179347,\n            \"objectType\": \"ticket\"\
                ,\n            \"objectID\": 5,\n            \"product\": \",80,\"\
                ,\n            \"project\": \"0\",\n            \"execution\": 0,\n\
                \            \"actor\": \"管理员\",\n            \"action\": \"opened\"\
                ,\n            \"date\": \"2022-12-21 15:43:33\",\n            \"\
                comment\": \"\",\n            \"extra\": \"\",\n            \"efforted\"\
                : 0,\n            \"read\": \"0\",\n            \"vision\": \"rnd\"\
                ,\n            \"history\": [],\n            \"desc\": \"2022-12-21\
                \ 15:43:33, 由 <strong>管理员</strong> 创建。\\n\"\n        }\n        }\n\
                \    ]\n}"
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    put:
      tags:
      - tickets
      operationId: putTickets
      summary: 修改工单
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTicketsResponse'
              example:
                title: test
                desc: edit test
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /users/{id}:
    delete:
      tags:
      - users
      operationId: deleteUsers
      summary: 删除用户
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUsersResponse'
              example:
                message: success
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    get:
      tags:
      - users
      operationId: getUsers
      summary: 获取用户信息
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
              example:
                id: 2
                company: 0
                type: inside
                dept: 5
                account: productManager
                role: po
                realname: 产品经理
                nickname: ''
                commiter: ''
                avatar: ''
                birthday: '0000-00-00'
                gender: m
                email: ''
                skype: ''
                qq: ''
                mobile: ''
                phone: ''
                weixin: ''
                dingding: ''
                slack: ''
                whatsapp: ''
                address: ''
                zipcode: ''
                nature: ''
                analysis: ''
                strategy: ''
                join: '0000-00-00'
                visits: 3
                ip: 192.168.0.8
                last: '2012-06-05 11:14:43'
                fails: 0
                locked: '0000-00-00 00:00:00'
                ranzhi: ''
                score: 0
                scoreLevel: 0
                deleted: '0'
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    put:
      tags:
      - users
      operationId: putUsers
      summary: 修改用户信息
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUsersResponse'
              example:
                realname: 管理员
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /executions/{id}/builds:
    get:
      tags:
      - executions
      operationId: getExecutionsBuilds
      summary: 获取执行版本列表
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionsBuildsResponse'
              example:
                total: 1
                builds:
                - id: 2
                  project: 12
                  product: 5
                  branch: 0
                  execution: 40
                  name: '1111111'
                  scmPath: ''
                  filePath: ''
                  date: '2021-12-01'
                  stories: []
                  bugs: []
                  builder: admin
                  desc: ''
                  deleted: false
                  executionName: 测试执行1111111
                  executionID: 40
                  productName: 测试
                  branchName: ''
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /executions/{id}/stories:
    get:
      tags:
      - executions
      operationId: getExecutionsStories
      summary: 获取执行需求列表
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionsStoriesResponse'
              example:
                page: 1
                total: 1
                limit: 20
                stories:
                - id: 7
                  parent: 0
                  product: 1
                  branch: 0
                  module: 7
                  plan: '1'
                  source: po
                  sourceNote: ''
                  fromBug: 0
                  title: 关于我们的设计和开发
                  keywords: ''
                  type: story
                  category: feature
                  pri: 1
                  estimate: 1
                  status: draft
                  subStatus: ''
                  color: ''
                  stage: planned
                  stagedBy: ''
                  mailto: ''
                  openedBy: productManager
                  openedDate: '2012-06-05T02:24:19Z'
                  assignedTo: productManager
                  assignedDate: '2012-06-05T02:24:19Z'
                  lastEditedBy: ''
                  lastEditedDate: null
                  reviewedBy: ''
                  reviewedDate: null
                  closedBy: ''
                  closedDate: null
                  closedReason: ''
                  toBug: 0
                  childStories: ''
                  linkStories: ''
                  duplicateStory: 0
                  version: 1
                  URChanged: '0'
                  deleted: false
                  planTitle: '1.0版本 '
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /executions/{id}/tasks:
    get:
      tags:
      - executions
      operationId: getExecutionsTasks
      summary: 获取执行任务列表
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionsTasksResponse'
              example:
                page: 1
                total: 1
                limit: 100
                tasks:
                - id: 18
                  project: 12
                  parent: 0
                  execution: 13
                  module: 0
                  design: 0
                  story: 0
                  storyVersion: 1
                  designVersion: 0
                  fromBug: 0
                  name: task1
                  type: devel
                  pri: 3
                  estimate: 0
                  consumed: 2
                  left: 0
                  deadline: null
                  status: done
                  subStatus: ''
                  color: ''
                  mailto: []
                  desc: ''
                  version: 1
                  openedBy:
                    id: 1
                    account: admin
                    avatar: ''
                    realname: 管理员
                  openedDate: '2021-11-29T02:33:47Z'
                  assignedTo:
                    id: 1
                    account: admin
                    avatar: ''
                    realname: 管理员
                  assignedDate: '2021-11-29T02:52:25Z'
                  estStarted: '0000-00-00'
                  realStarted: '2021-11-29T02:50:00Z'
                  finishedBy:
                    id: 1
                    account: admin
                    avatar: ''
                    realname: 管理员
                  finishedDate: '2021-11-29T02:52:17Z'
                  finishedList: ''
                  canceledBy: null
                  canceledDate: null
                  closedBy: null
                  closedDate: null
                  planDuration: 0
                  realDuration: 0
                  closedReason: ''
                  lastEditedBy:
                    id: 1
                    account: admin
                    avatar: ''
                    realname: 管理员
                  lastEditedDate: '2021-11-29T02:52:25Z'
                  activatedDate: '0000-00-00'
                  deleted: false
                  storyID: null
                  storyTitle: null
                  product: null
                  branch: null
                  latestStoryVersion: null
                  storyStatus: null
                  assignedToRealName: 管理员
                  needConfirm: false
                  progress: 100
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    post:
      tags:
      - executions
      operationId: postExecutionsTasks
      summary: 创建任务
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExecutionsTasksResponse'
              example:
                name: testtt
                assignedTo:
                - admin
                type: devel
                estStarted: '2021-12-01'
                deadline: '2021-12-31'
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /feedbacks:
    get:
      tags:
      - feedbacks
      operationId: getFeedbacks
      summary: 获取反馈列表
      parameters:
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbacksResponse'
              example:
                page: 1
                total: 1
                limit: 20
                feedbacks:
                - id: 2
                  product: 2
                  module: 0
                  title: 一个反馈
                  type: ''
                  solution: ''
                  desc: ''
                  status: wait
                  subStatus: ''
                  public: '0'
                  notify: '1'
                  notifyEmail: ''
                  likes: ''
                  result: 0
                  faq: 0
                  openedBy:
                    id: 1
                    account: admin
                    avatar: ''
                    realname: admin
                  openedDate: '2022-06-10T00:56:02Z'
                  reviewedBy: null
                  reviewedDate: null
                  processedBy: null
                  processedDate: null
                  closedBy: null
                  closedDate: null
                  closedReason: ''
                  editedBy:
                    id: 1
                    account: admin
                    avatar: ''
                    realname: admin
                  editedDate: '2022-06-10T00:56:02Z'
                  assignedTo: null
                  assignedDate: '2022-06-10 08:56:02'
                  feedbackBy: ''
                  mailto: []
                  deleted: false
                  dept: 0
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    post:
      tags:
      - feedbacks
      operationId: postFeedbacks
      summary: 创建反馈
      parameters:
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFeedbacksResponse'
              example:
                product: 2
                title: create test feedback
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /productplans/{id}:
    get:
      tags:
      - productplans
      operationId: getProductplans
      summary: 获取计划详情
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductplansResponse'
              example:
                id: 2
                product: 4
                branch: 0
                parent: 0
                title: 主干计划
                desc: ''
                begin: '2021-11-23'
                end: '2021-11-29'
                order: ''
                deleted: false
                stories:
                - story: 12
                  plan: '2'
                  order: 1
                  id: 12
                  parent: 0
                  product: 4
                  branch: 0
                  module: 23
                  source: ''
                  sourceNote: ''
                  fromBug: 0
                  title: 主干需求
                  keywords: ''
                  type: story
                  category: feature
                  pri: 0
                  estimate: 0
                  status: active
                  subStatus: ''
                  color: ''
                  stage: planned
                  stagedBy: ''
                  mailto: null
                  openedBy: admin
                  openedDate: '2021-11-23 16:04:30'
                  assignedTo: admin
                  assignedDate: '2021-11-23 19:42:55'
                  lastEditedBy: admin
                  lastEditedDate: '2021-11-23 19:42:55'
                  reviewedBy: ''
                  reviewedDate: '0000-00-00 00:00:00'
                  closedBy: ''
                  closedDate: '0000-00-00 00:00:00'
                  closedReason: ''
                  toBug: 0
                  childStories: ''
                  linkStories: ''
                  duplicateStory: 0
                  version: 1
                  URChanged: '0'
                  deleted: '0'
                bugs:
                - id: 5
                  project: 0
                  product: 4
                  branch: 1
                  module: 24
                  execution: 0
                  plan: 2
                  story: 0
                  storyVersion: 1
                  task: 0
                  toTask: 0
                  toStory: 0
                  title: Bug1
                  keywords: ''
                  severity: 3
                  pri: 3
                  type: codeerror
                  os: ''
                  browser: ''
                  hardware: ''
                  found: ''
                  steps: <p>[步骤]</p><br /><p>[结果]</p><br /><p>[期望]</p><br />
                  status: active
                  subStatus: ''
                  color: ''
                  confirmed: 0
                  activatedCount: 0
                  activatedDate: '0000-00-00 00:00:00'
                  mailto: ''
                  openedBy: admin
                  openedDate: '2021-11-29 13:02:34'
                  openedBuild: trunk
                  assignedTo: ''
                  assignedDate: '0000-00-00 00:00:00'
                  deadline: '2021-11-29'
                  resolvedBy: ''
                  resolution: ''
                  resolvedBuild: ''
                  resolvedDate: '0000-00-00 00:00:00'
                  closedBy: ''
                  closedDate: '0000-00-00 00:00:00'
                  duplicateBug: 0
                  linkBug: ''
                  case: 0
                  caseVersion: 0
                  result: 0
                  repo: 0
                  entry: ''
                  lines: ''
                  v1: ''
                  v2: ''
                  repoType: ''
                  testtask: 0
                  lastEditedBy: ''
                  lastEditedDate: '0000-00-00 00:00:00'
                  deleted: '0'
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    put:
      tags:
      - productplans
      operationId: putProductplans
      summary: 修改计划
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductplansResponse'
              example:
                id: 2
                product: 4
                branch: 0
                parent: 0
                title: 主干计划
                desc: ''
                begin: '2021-11-23'
                end: '2021-11-29'
                order: ''
                deleted: false
                stories:
                - story: 12
                  plan: '2'
                  order: 1
                  id: 12
                  parent: 0
                  product: 4
                  branch: 0
                  module: 23
                  source: ''
                  sourceNote: ''
                  fromBug: 0
                  title: 主干需求
                  keywords: ''
                  type: story
                  category: feature
                  pri: 0
                  estimate: 0
                  status: active
                  subStatus: ''
                  color: ''
                  stage: planned
                  stagedBy: ''
                  mailto: null
                  openedBy: admin
                  openedDate: '2021-11-23 16:04:30'
                  assignedTo: admin
                  assignedDate: '2021-11-23 19:42:55'
                  lastEditedBy: admin
                  lastEditedDate: '2021-11-23 19:42:55'
                  reviewedBy: ''
                  reviewedDate: '0000-00-00 00:00:00'
                  closedBy: ''
                  closedDate: '0000-00-00 00:00:00'
                  closedReason: ''
                  toBug: 0
                  childStories: ''
                  linkStories: ''
                  duplicateStory: 0
                  version: 1
                  URChanged: '0'
                  deleted: '0'
                bugs:
                - id: 5
                  project: 0
                  product: 4
                  branch: 1
                  module: 24
                  execution: 0
                  plan: 2
                  story: 0
                  storyVersion: 1
                  task: 0
                  toTask: 0
                  toStory: 0
                  title: Bug1
                  keywords: ''
                  severity: 3
                  pri: 3
                  type: codeerror
                  os: ''
                  browser: ''
                  hardware: ''
                  found: ''
                  steps: <p>[步骤]</p><br /><p>[结果]</p><br /><p>[期望]</p><br />
                  status: active
                  subStatus: ''
                  color: ''
                  confirmed: 0
                  activatedCount: 0
                  activatedDate: '0000-00-00 00:00:00'
                  mailto: ''
                  openedBy: admin
                  openedDate: '2021-11-29 13:02:34'
                  openedBuild: trunk
                  assignedTo: ''
                  assignedDate: '0000-00-00 00:00:00'
                  deadline: '2021-11-29'
                  resolvedBy: ''
                  resolution: ''
                  resolvedBuild: ''
                  resolvedDate: '0000-00-00 00:00:00'
                  closedBy: ''
                  closedDate: '0000-00-00 00:00:00'
                  duplicateBug: 0
                  linkBug: ''
                  case: 0
                  caseVersion: 0
                  result: 0
                  repo: 0
                  entry: ''
                  lines: ''
                  v1: ''
                  v2: ''
                  repoType: ''
                  testtask: 0
                  lastEditedBy: ''
                  lastEditedDate: '0000-00-00 00:00:00'
                  deleted: '0'
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /products:
    get:
      tags:
      - products
      operationId: getProducts
      summary: 获取产品列表
      parameters:
      - name: Token
        in: header
        required: false
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
              example:
                total: 1
                products:
                - id: 6
                  program: 6
                  name: 测试
                  code: ''
                  bind: '1'
                  line: 0
                  type: normal
                  status: normal
                  subStatus: ''
                  desc: ''
                  PO:
                    id: 2
                    account: productManager
                    avatar: ''
                    realname: 产品经理
                  QD:
                    id: 1
                    account: admin
                    avatar: ''
                    realname: 管理员
                  RD:
                    id: 2
                    account: productManager
                    avatar: ''
                    realname: 产品经理
                  acl: private
                  whitelist:
                  - id: 1
                    account: admin
                    avatar: ''
                    realname: 管理员
                  - id: 2
                    account: productManager
                    avatar: ''
                    realname: 产品经理
                  reviewer: ''
                  createdBy:
                    id: 1
                    account: admin
                    avatar: ''
                    realname: 管理员
                  createdDate: '2021-12-01T05:17:04Z'
                  createdVersion: '15.8'
                  order: 30
                  deleted: '0'
                  lineName: ''
                  programName: 企业管理
                  stories:
                    '0': ''
                    '1': draft
                    '2': active
                    '3': closed
                    '4': changed
                    ? ''
                    : 0
                    draft: 0
                    active: 0
                    closed: 0
                    changed: 0
                  requirements:
                    '0': ''
                    '1': draft
                    '2': active
                    '3': closed
                    '4': changed
                    ? ''
                    : 0
                    draft: 0
                    active: 0
                    closed: 0
                    changed: 0
                  plans: 0
                  releases: 0
                  bugs: 0
                  unResolved: 0
                  closedBugs: 0
                  fixedBugs: 0
                  thisWeekBugs: 0
                  assignToNull: 0
                  progress: 0
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    post:
      tags:
      - products
      operationId: postProducts
      summary: 创建产品
      parameters:
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductsResponse'
              example:
                name: 测试产品
                code: test
                program: 1
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /products/{id}:
    get:
      tags:
      - products
      operationId: getProducts
      summary: 获取产品详情
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
              example:
                id: 1
                program: 6
                name: 公司企业网站建设1
                code: companyWebsite
                bind: '0'
                line: 0
                type: normal
                status: normal
                subStatus: ''
                desc: 建立公司企业网站，可以更好对外展示。<br />
                PO:
                  id: 2
                  account: productManager
                  avatar: ''
                  realname: 产品经理
                QD:
                  id: 10
                  account: testManager
                  avatar: ''
                  realname: 测试经理
                RD:
                  id: 2
                  account: productManager
                  avatar: ''
                  realname: 产品经理
                acl: open
                whitelist: []
                reviewer: ''
                createdBy:
                  id: 2
                  account: productManager
                  avatar: ''
                  realname: 产品经理
                createdDate: '2012-06-05T01:57:07Z'
                createdVersion: ''
                order: 5
                deleted: '0'
                stories:
                  active: 5
                  draft: 3
                  ? ''
                  : 0
                  closed: 0
                  changed: 0
                plans: 0
                releases: 0
                builds: 0
                cases: 5
                projects: 0
                executions: 0
                bugs: 5
                docs: 0
                progress: 0
                caseReview: false
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /products/{id}/bugs:
    get:
      tags:
      - products
      operationId: getProductsBugs
      summary: 获取产品Bug列表
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsBugsResponse'
              example:
                page: 1
                total: 1
                limit: 20
                bugs:
                - id: 9
                  project: 0
                  product: 4
                  branch: 0
                  module: 0
                  execution: 0
                  plan: 0
                  story: 0
                  storyVersion: 1
                  task: 0
                  toTask: 0
                  toStory: 0
                  title: Bug3
                  keywords: ''
                  severity: 3
                  pri: 0
                  type: ''
                  os: ''
                  browser: ''
                  hardware: ''
                  found: ''
                  steps: ''
                  status:
                    code: active
                    name: 激活
                  subStatus: ''
                  color: ''
                  confirmed: 0
                  activatedCount: 0
                  activatedDate: '1969-12-31T16:00:00Z'
                  feedbackBy: ''
                  notifyEmail: ''
                  mailto: null
                  openedBy:
                    id: 1
                    account: admin
                    avatar: ''
                    realname: 管理员
                  openedDate: '2021-12-01T01:25:42Z'
                  openedBuild: 主干
                  assignedTo: null
                  assignedDate: '1969-12-31T16:00:00Z'
                  deadline: '1970-01-01'
                  resolvedBy: null
                  resolution: ''
                  resolvedBuild: ''
                  resolvedDate: '1969-12-31T16:00:00Z'
                  closedBy: null
                  closedDate: '1969-12-31T16:00:00Z'
                  duplicateBug: 0
                  linkBug: ''
                  case: 0
                  caseVersion: 1
                  result: 0
                  repo: 0
                  entry: ''
                  lines: ''
                  v1: ''
                  v2: ''
                  repoType: ''
                  testtask: 0
                  lastEditedBy: null
                  lastEditedDate: '1969-12-31T16:00:00Z'
                  deleted: false
                  needconfirm: false
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    post:
      tags:
      - products
      operationId: postProductsBugs
      summary: 创建Bug
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductsBugsResponse'
              example:
                title: Bug2
                severity: 1
                pri: 1
                steps: ''
                type: codeerror
                openedBuild:
                - trunk
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /products/{id}/plans:
    get:
      tags:
      - products
      operationId: getProductsPlans
      summary: 获取产品计划列表
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsPlansResponse'
              example:
                page: 1
                total: 1
                limit: 20
                plans:
                - id: 1
                  product: 1
                  branch: 0
                  parent: 0
                  title: 1.0版本
                  desc: 开发出企业网站1.0版本。<br />
                  begin: '2020-06-05'
                  end: '2021-06-04'
                  order: ''
                  deleted: '0'
                  stories: 6
                  bugs: 0
                  hour: 5
                  project: ''
                  projectID: ''
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    post:
      tags:
      - products
      operationId: postProductsPlans
      summary: 创建计划
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductsPlansResponse'
              example:
                id: 2
                product: 4
                branch: 0
                parent: 0
                title: 主干计划
                desc: ''
                begin: '2021-11-23'
                end: '2021-11-29'
                order: ''
                deleted: false
                stories:
                - story: 12
                  plan: '2'
                  order: 1
                  id: 12
                  parent: 0
                  product: 4
                  branch: 0
                  module: 23
                  source: ''
                  sourceNote: ''
                  fromBug: 0
                  title: 主干需求
                  keywords: ''
                  type: story
                  category: feature
                  pri: 0
                  estimate: 0
                  status: active
                  subStatus: ''
                  color: ''
                  stage: planned
                  stagedBy: ''
                  mailto: null
                  openedBy: admin
                  openedDate: '2021-11-23 16:04:30'
                  assignedTo: admin
                  assignedDate: '2021-11-23 19:42:55'
                  lastEditedBy: admin
                  lastEditedDate: '2021-11-23 19:42:55'
                  reviewedBy: ''
                  reviewedDate: '0000-00-00 00:00:00'
                  closedBy: ''
                  closedDate: '0000-00-00 00:00:00'
                  closedReason: ''
                  toBug: 0
                  childStories: ''
                  linkStories: ''
                  duplicateStory: 0
                  version: 1
                  URChanged: '0'
                  deleted: '0'
                bugs:
                - id: 5
                  project: 0
                  product: 4
                  branch: 1
                  module: 24
                  execution: 0
                  plan: 2
                  story: 0
                  storyVersion: 1
                  task: 0
                  toTask: 0
                  toStory: 0
                  title: Bug1
                  keywords: ''
                  severity: 3
                  pri: 3
                  type: codeerror
                  os: ''
                  browser: ''
                  hardware: ''
                  found: ''
                  steps: <p>[步骤]</p><br /><p>[结果]</p><br /><p>[期望]</p><br />
                  status: active
                  subStatus: ''
                  color: ''
                  confirmed: 0
                  activatedCount: 0
                  activatedDate: '0000-00-00 00:00:00'
                  mailto: ''
                  openedBy: admin
                  openedDate: '2021-11-29 13:02:34'
                  openedBuild: trunk
                  assignedTo: ''
                  assignedDate: '0000-00-00 00:00:00'
                  deadline: '2021-11-29'
                  resolvedBy: ''
                  resolution: ''
                  resolvedBuild: ''
                  resolvedDate: '0000-00-00 00:00:00'
                  closedBy: ''
                  closedDate: '0000-00-00 00:00:00'
                  duplicateBug: 0
                  linkBug: ''
                  case: 0
                  caseVersion: 0
                  result: 0
                  repo: 0
                  entry: ''
                  lines: ''
                  v1: ''
                  v2: ''
                  repoType: ''
                  testtask: 0
                  lastEditedBy: ''
                  lastEditedDate: '0000-00-00 00:00:00'
                  deleted: '0'
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /products/{id}/releases:
    get:
      tags:
      - products
      operationId: getProductsReleases
      summary: 获取产品发布列表
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsReleasesResponse'
              example:
                total: 1
                releases:
                - id: 1
                  project: 41
                  product: 4
                  branch: 0
                  build: 3
                  name: 发布test
                  marker: '0'
                  date: '2021-12-02'
                  stories: ''
                  bugs: ''
                  leftBugs: ''
                  desc: ''
                  mailto: ''
                  notify: null
                  status: normal
                  subStatus: ''
                  deleted: false
                  productName: 多分支产品
                  buildID: 3
                  buildName: test
                  projectName: 测试
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /products/{id}/stories:
    get:
      tags:
      - products
      operationId: getProductsStories
      summary: 获取产品需求列表
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsStoriesResponse'
              example:
                page: 1
                total: 1
                limit: 20
                stories:
                - id: 7
                  parent: 0
                  product: 1
                  branch: 0
                  module: 7
                  plan: '1'
                  source: po
                  sourceNote: ''
                  fromBug: 0
                  title: 关于我们的设计和开发
                  keywords: ''
                  type: story
                  category: feature
                  pri: 1
                  estimate: 1
                  status: draft
                  subStatus: ''
                  color: ''
                  stage: planned
                  stagedBy: ''
                  mailto: ''
                  openedBy: productManager
                  openedDate: '2012-06-05T02:24:19Z'
                  assignedTo: productManager
                  assignedDate: '2012-06-05T02:24:19Z'
                  lastEditedBy: ''
                  lastEditedDate: null
                  reviewedBy: ''
                  reviewedDate: null
                  closedBy: ''
                  closedDate: null
                  closedReason: ''
                  toBug: 0
                  childStories: ''
                  linkStories: ''
                  duplicateStory: 0
                  version: 1
                  URChanged: '0'
                  deleted: false
                  planTitle: '1.0版本 '
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /products/{id}/testcases:
    get:
      tags:
      - products
      operationId: getProductsTestcases
      summary: 获取产品用例列表
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsTestcasesResponse'
              example:
                page: 1
                total: 6
                limit: 20
                testcases:
                - id: 10
                  project: 0
                  product: 1
                  execution: 0
                  branch: 0
                  lib: 0
                  module: 0
                  path: 0
                  story: 0
                  storyVersion: 1
                  title: case1
                  precondition: ''
                  keywords: ''
                  pri: 1
                  type: feature
                  auto: 'no'
                  frame: ''
                  stage: ''
                  howRun: ''
                  scriptedBy: ''
                  scriptedDate: null
                  scriptStatus: ''
                  scriptLocation: ''
                  status: normal
                  subStatus: ''
                  color: ''
                  frequency: '1'
                  order: 0
                  openedBy:
                    id: 1
                    account: admin
                    avatar: ''
                    realname: 管理员
                  openedDate: '2021-12-05T15:05:16Z'
                  reviewedBy: null
                  reviewedDate: null
                  lastEditedBy: null
                  lastEditedDate: null
                  version: 1
                  linkCase: ''
                  fromBug: 0
                  fromCaseID: 0
                  fromCaseVersion: 1
                  deleted: false
                  lastRunner: ''
                  lastRunDate: null
                  lastRunResult: ''
                  storyTitle: null
                  needconfirm: false
                  bugs: 0
                  results: 0
                  caseFails: 0
                  stepNumber: 1
                  statusName: 正常
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    post:
      tags:
      - products
      operationId: postProductsTestcases
      summary: 创建用例
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductsTestcasesResponse'
              example:
                title: case1
                pri: 1
                steps:
                - desc: 步骤1
                  expect: 结果1
                type: feature
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /programs:
    get:
      tags:
      - programs
      operationId: getPrograms
      summary: 获取项目集列表
      parameters:
      - name: Token
        in: header
        required: true
        description: 访问凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramsResponse'
              example:
                programs:
                - id: 6
                  project: 0
                  model: ''
                  type: program
                  lifetime: sprint
                  budget: '0'
                  budgetUnit: CNY
                  attribute: ''
                  percent: 0
                  milestone: '0'
                  output: ''
                  auth: ''
                  parent: 0
                  path: ',6,'
                  grade: 1
                  name: 企业管理
                  code: ''
                  begin: '2021-06-05'
                  end: '2022-06-04'
                  realBegan: '2021-12-01'
                  realEnd: '2021-12-01'
                  days: 0
                  status: doing
                  subStatus: ''
                  pri: '1'
                  desc: ''
                  version: 0
                  parentVersion: 0
                  planDuration: 0
                  realDuration: 0
                  openedBy:
                    id: 1
                    account: admin
                    avatar: ''
                    realname: 管理员
                  openedDate: '2021-04-28T03:22:04Z'
                  openedVersion: 15.0.rc3
                  lastEditedBy: ''
                  lastEditedDate: '2021-11-30T16:00:00Z'
                  closedBy: null
                  closedDate: '2021-11-30T16:00:00Z'
                  canceledBy: null
                  canceledDate: '2021-11-30T16:00:00Z'
                  PO: null
                  PM:
                    id: 1
                    account: admin
                    avatar: ''
                    realname: 管理员
                  QD: null
                  RD: null
                  team: 企业管理
                  acl: open
                  whitelist: ','
                  order: 30
                  deleted: false
                  progress: 0
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    post:
      tags:
      - programs
      operationId: postPrograms
      summary: 创建项目集
      parameters:
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProgramsResponse'
              example:
                id: 43
                project: 0
                model: ''
                type: program
                lifetime: ''
                budget: '0'
                budgetUnit: CNY
                attribute: ''
                percent: 0
                milestone: '0'
                output: ''
                auth: ''
                parent: 0
                path: ',43,'
                grade: 1
                name: 项目集21
                code: ''
                begin: '2021-09-11'
                end: '2021-12-31'
                realBegan: null
                realEnd: null
                days: 0
                status: wait
                subStatus: ''
                pri: '1'
                desc: ''
                version: 0
                parentVersion: 0
                planDuration: 0
                realDuration: 0
                openedBy:
                  id: 1
                  account: admin
                  avatar: ''
                  realname: 管理员
                openedDate: '2021-12-03T02:07:36Z'
                openedVersion: ''
                lastEditedBy: ''
                lastEditedDate: null
                closedBy: null
                closedDate: null
                canceledBy: null
                canceledDate: null
                PO: null
                PM: null
                QD: null
                RD: null
                team: ''
                acl: private
                whitelist:
                - id: 1
                  account: admin
                  avatar: ''
                  realname: 管理员
                order: 215
                deleted: false
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /projects:
    get:
      tags:
      - projects
      operationId: getProjects
      summary: 获取项目列表
      parameters:
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsResponse'
              example:
                page: 1
                total: 2
                limit: 20
                projects:
                - id: 7
                  name: 企业管理系统
                  code: ''
                  model: scrum
                  type: project
                  budget: '0'
                  budgetUnit: CNY
                  parent: 6
                  begin: '2021-06-05'
                  end: '2022-06-04'
                  status: doing
                  openedBy: admin
                  openedDate: '2021-04-28T03:22:04Z'
                  PM: projectManager
                  progress: 33
                - id: 8
                  name: 分支项目
                  code: bb
                  model: scrum
                  type: project
                  budget: ''
                  budgetUnit: CNY
                  parent: 6
                  begin: '2021-11-23'
                  end: '2021-12-23'
                  status: wait
                  openedBy: admin
                  openedDate: '2021-11-23T07:45:16Z'
                  PM: ''
                  progress: 0
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    post:
      tags:
      - projects
      operationId: postProjects
      summary: 创建项目
      parameters:
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectsResponse'
              example:
                name: test
                code: test
                begin: '2021-01-01'
                end: '2022-01-01'
                products:
                - 1
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /projects/{id}/builds:
    get:
      tags:
      - projects
      operationId: getProjectsBuilds
      summary: 获取项目版本列表
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsBuildsResponse'
              example:
                total: 1
                builds:
                - id: 2
                  project: 12
                  product: 5
                  branch: 0
                  execution: 40
                  name: '1111111'
                  scmPath: ''
                  filePath: ''
                  date: '2021-12-01'
                  stories: []
                  bugs: []
                  builder: admin
                  desc: ''
                  deleted: false
                  executionName: 测试执行1111111
                  executionID: 40
                  productName: 测试
                  branchName: ''
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    post:
      tags:
      - projects
      operationId: postProjectsBuilds
      summary: 创建版本
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectsBuildsResponse'
              example:
                name: test
                product: 4
                date: '2021-01-01'
                execution: 42
                builder: admin
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /projects/{id}/executions:
    get:
      tags:
      - projects
      operationId: getProjectsExecutions
      summary: 获取项目的执行列表
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsExecutionsResponse'
              example:
                page: 1
                total: 1
                limit: 20
                executions:
                - id: 13
                  name: 迭代1
                  project: 12
                  code: sprint1
                  type: sprint
                  parent: 12
                  begin: '2021-11-26'
                  end: '2021-12-02'
                  status: wait
                  openedBy: admin
                  openedDate: '2021-11-26T02:42:22Z'
                  progress: 0
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    post:
      tags:
      - projects
      operationId: postProjectsExecutions
      summary: 创建执行
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectsExecutionsResponse'
              example:
                name: 测试执行1
                code: test1
                begin: '2021-12-01'
                end: '2021-12-11'
                days: 10
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /projects/{id}/releases:
    get:
      tags:
      - projects
      operationId: getProjectsReleases
      summary: 获取项目发布列表
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsReleasesResponse'
              example:
                total: 1
                releases:
                - id: 1
                  project: 41
                  product: 4
                  branch: 0
                  build: 3
                  name: 发布test
                  marker: '0'
                  date: '2021-12-02'
                  stories: ''
                  bugs: ''
                  leftBugs: ''
                  desc: ''
                  mailto: ''
                  notify: null
                  status: normal
                  subStatus: ''
                  deleted: false
                  productName: 多分支产品
                  buildID: 3
                  buildName: test
                  projectName: 测试
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /projects/{id}/stories:
    get:
      tags:
      - projects
      operationId: getProjectsStories
      summary: 获取项目需求列表
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsStoriesResponse'
              example:
                page: 1
                total: 1
                limit: 20
                stories:
                - id: 7
                  parent: 0
                  product: 1
                  branch: 0
                  module: 7
                  plan: '1'
                  source: po
                  sourceNote: ''
                  fromBug: 0
                  title: 关于我们的设计和开发
                  keywords: ''
                  type: story
                  category: feature
                  pri: 1
                  estimate: 1
                  status: draft
                  subStatus: ''
                  color: ''
                  stage: planned
                  stagedBy: ''
                  mailto: ''
                  openedBy: productManager
                  openedDate: '2012-06-05T02:24:19Z'
                  assignedTo: productManager
                  assignedDate: '2012-06-05T02:24:19Z'
                  lastEditedBy: ''
                  lastEditedDate: null
                  reviewedBy: ''
                  reviewedDate: null
                  closedBy: ''
                  closedDate: null
                  closedReason: ''
                  toBug: 0
                  childStories: ''
                  linkStories: ''
                  duplicateStory: 0
                  version: 1
                  URChanged: '0'
                  deleted: false
                  planTitle: '1.0版本 '
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /projects/{id}/testtasks:
    get:
      tags:
      - projects
      operationId: getProjectsTesttasks
      summary: 获取项目的测试单
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsTesttasksResponse'
              example:
                page: 1
                total: 1
                limit: 20
                testtasks:
                - id: 1
                  project: 0
                  product: 1
                  name: 企业网站第一期测试任务
                  execution: 1
                  build: '1'
                  type: ''
                  owner: testManager
                  pri: 0
                  begin: '2020-06-05'
                  end: '2021-06-21'
                  realFinishedDate: null
                  mailto: ''
                  desc: ''
                  report: ''
                  status: wait
                  testreport: 0
                  auto: 'no'
                  subStatus: ''
                  deleted: '0'
                  productName: 公司企业网站建设1
                  executionName: 企业网站第一期
                  buildName: 第一期版本
                  branch: 0
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /testtasks:
    get:
      tags:
      - testtasks
      operationId: getTesttasks
      summary: 获取测试单列表
      parameters:
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TesttasksResponse'
              example:
                page: 1
                total: 1
                limit: 20
                testtasks:
                - id: 1
                  project: 0
                  product: 1
                  name: 企业网站第一期测试任务
                  execution: 1
                  build: '1'
                  type: ''
                  owner: testManager
                  pri: 0
                  begin: '2020-06-05'
                  end: '2021-06-21'
                  realFinishedDate: null
                  mailto: ''
                  desc: ''
                  report: ''
                  status: wait
                  testreport: 0
                  auto: 'no'
                  subStatus: ''
                  deleted: '0'
                  productName: 公司企业网站建设1
                  executionName: 企业网站第一期
                  buildName: 第一期版本
                  branch: 0
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /testtasks/{id}:
    get:
      tags:
      - testtasks
      operationId: getTesttasks
      summary: 获取测试单详情
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TesttasksResponse'
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /tickets:
    get:
      tags:
      - tickets
      operationId: getTickets
      summary: 获取工单列表
      parameters:
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketsResponse'
              example: "{\n    \"page\": 1,\n    \"total\": 7,\n    \"limit\": 20,\n\
                \    \"tickets\": [\n        {\n            \"id\": 7,\n         \
                \   \"product\": 80,\n            \"module\": 80,\n            \"\
                title\": \"sgm GIAO\",\n            \"type\": \"\",\n            \"\
                desc\": \"\",\n            \"openedBuild\": \"\",\n            \"\
                feedback\": 0,\n            \"assignedTo\": null,\n            \"\
                assignedDate\": \"0000-00-00 00:00:00\",\n            \"realStarted\"\
                : \"0000-00-00 00:00:00\",\n            \"startedBy\": \"\",\n   \
                \         \"startedDate\": \"0000-00-00 00:00:00\",\n            \"\
                deadline\": \"-0001-11-29T16:00:00Z\",\n            \"pri\": 0,\n\
                \            \"estimate\": 0,\n            \"left\": 0,\n        \
                \    \"status\": \"wait\",\n            \"openedBy\": {\n        \
                \        \"id\": 4,\n                \"account\": \"admin\",\n   \
                \             \"avatar\": \"/data/upload/1/202104/02151445087773h0\"\
                ,\n                \"realname\": \"管理员\"\n            },\n       \
                \     \"openedDate\": \"2022-12-21T07:45:54Z\",\n            \"activatedCount\"\
                : 0,\n            \"activatedBy\": null,\n            \"activatedDate\"\
                : null,\n            \"closedBy\": null,\n            \"closedDate\"\
                : null,\n            \"closedReason\": \"\",\n            \"finishedBy\"\
                : null,\n            \"finishedDate\": null,\n            \"resolvedBy\"\
                : \"\",\n            \"resolvedDate\": \"0000-00-00 00:00:00\",\n\
                \            \"resolution\": \"\",\n            \"editedBy\": null,\n\
                \            \"editedDate\": null,\n            \"keywords\": \"\"\
                ,\n            \"repeatTicket\": 0,\n            \"mailto\": [],\n\
                \            \"deleted\": false,\n            \"consumed\": 0,\n \
                \       }\n}"
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    post:
      tags:
      - tickets
      operationId: postTickets
      summary: 创建工单
      parameters:
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTicketsResponse'
              example:
                product: 2
                module: 2
                title: create test ticket
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /user:
    get:
      tags:
      - user
      operationId: getUser
      summary: 获取我的个人信息
      parameters:
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
              example:
                profile:
                  id: 1
                  company: 0
                  type: inside
                  dept: 0
                  account: admin
                  role:
                    code: ''
                    name: ''
                  realname: admin
                  nickname: ''
                  commiter: ''
                  avatar: ''
                  birthday: null
                  gender: f
                  email: ''
                  skype: ''
                  qq: ''
                  mobile: ''
                  phone: ''
                  weixin: ''
                  dingding: ''
                  slack: ''
                  whatsapp: ''
                  address: ''
                  zipcode: ''
                  nature: ''
                  analysis: ''
                  strategy: ''
                  join: null
                  visits: 10
                  ip: 127.0.0.1
                  last: '2021-11-28T16:31:40Z'
                  fails: 0
                  locked: null
                  ranzhi: ''
                  score: 0
                  scoreLevel: 0
                  deleted: '0'
                  admin: true
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /users:
    get:
      tags:
      - users
      operationId: getUsers
      summary: 获取用户列表
      parameters:
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
              example:
                page: 1
                total: 3
                limit: 20
                users:
                - id: 3
                  dept: 6
                  account: projectManager
                  realname: 项目经理
                  role: pm
                  email: ''
                - id: 2
                  dept: 5
                  account: productManager
                  realname: 产品经理
                  role: po
                  email: ''
                - id: 1
                  dept: 0
                  account: admin
                  realname: admin
                  role: ''
                  email: ''
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
    post:
      tags:
      - users
      operationId: postUsers
      summary: 创建用户
      parameters:
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUsersResponse'
              example:
                account: usertest
                password: 123qwe!@#
                realname: 测试用户
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /feedbacks/{id}/assign:
    post:
      tags:
      - feedbacks
      operationId: postFeedbacksAssign
      summary: 指派反馈
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFeedbacksAssignResponse'
              example:
                assignedTo: admin
                comment: 'yes'
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /feedbacks/{id}/close:
    post:
      tags:
      - feedbacks
      operationId: postFeedbacksClose
      summary: 关闭反馈
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFeedbacksCloseResponse'
              example:
                closedReason: repeat
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /productplans/{id}/linkstories:
    post:
      tags:
      - productplans
      operationId: postProductplansLinkstories
      summary: 产品计划关联需求
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductplansLinkstoriesResponse'
              example:
                stories:
                - 11
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /productplans/{id}/unlinkbugs:
    post:
      tags:
      - productplans
      operationId: postProductplansUnlinkbugs
      summary: 产品计划取消关联Bug
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductplansUnlinkbugsResponse'
              example:
                bugs:
                - 7
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /productplans/{id}/unlinkstories:
    post:
      tags:
      - productplans
      operationId: postProductplansUnlinkstories
      summary: 产品计划取消关联需求
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductplansUnlinkstoriesResponse'
              example:
                stories:
                - 11
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /products/{id}/linkBugs:
    post:
      tags:
      - products
      operationId: postProductsLinkBugs
      summary: 产品计划关联Bug
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductsLinkBugsResponse'
              example:
                bugs:
                - 7
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
      requestBody:
        description: 请求参数
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductsLinkBugsRequest'
  /stories:
    post:
      tags:
      - stories
      operationId: postStories
      summary: 创建需求
      parameters:
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStoriesResponse'
              example:
                title: 测试需求
                spec: 测试
                product: 1
                pri: 1
                category: feature
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /stories/{id}/change:
    post:
      tags:
      - stories
      operationId: postStoriesChange
      summary: 变更需求
      parameters:
      - name: id
        in: path
        required: true
        description: 路径参数 id
        schema:
          type: string
      - name: Token
        in: header
        required: true
        description: 认证凭证Token
        schema:
          type: string
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStoriesChangeResponse'
              example:
                spec: 变更描述
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
  /tokens:
    post:
      tags:
      - tokens
      operationId: postTokens
      summary: 获取Token
      parameters: []
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTokensResponse'
              example:
                account: admin
                password: '123456'
        '400':
          description: 请求错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 服务器错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - TokenAuth: []
      requestBody:
        description: 请求参数
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokensRequest'
components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          description: 错误代码
        message:
          type: string
          description: 错误信息
      required:
      - code
      - message
    DeleteBugsResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    DeleteBuildsResponse:
      type: object
      properties:
        id:
          type: integer
        project:
          type: integer
        product:
          type: integer
        branch:
          type: integer
        execution:
          type: integer
        name:
          type: string
        scmPath:
          type: string
        filePath:
          type: string
        desc:
          type: string
        builder:
          type: string
        date:
          type: string
          format: date
      required:
      - id
      - project
      - product
      - branch
      - execution
      - name
      - scmPath
      - filePath
      - desc
      - builder
      - date
    DeleteExecutionsResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    DeleteFeedbacksResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    DeleteProductsplanResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    DeleteProductResponse:
      type: object
      properties:
        message:
          type: string
    DeleteProgramsResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    DeleteProjectsResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    DeleteStoriesResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    DeleteTasksResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    DeleteTestcasesResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    DeleteTicketsResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    DeleteUsersResponse:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    BugsResponse:
      type: object
      properties:
        id:
          type: integer
        product:
          type: integer
        branch:
          type: integer
        module:
          type: integer
        project:
          type: integer
        execution:
          type: integer
        toTask:
          type: boolean
        toStory:
          type: boolean
        title:
          type: string
        keywords:
          type: string
        severity:
          type: integer
        pri:
          type: integer
        type:
          type: string
        os:
          type: string
        browser:
          type: string
        steps:
          type: string
        task:
          type: integer
        story:
          type: integer
        openedBy:
          type: string
        openedDate:
          type: string
          format: date-time
        deadline:
          type: string
          format: date
        assignedTo:
          type: string
        assignedDate:
          type: string
          format: date-time
        resolvedBy:
          type: string
        resolvedDate:
          type: string
          format: date-time
        resolvedBuild:
          type: string
        closedBy:
          type: string
        closedDate:
          type: string
          format: date-time
        status:
          type: string
      required:
      - id
      - product
      - branch
      - module
      - project
      - execution
      - title
      - severity
      - pri
      - openedBy
      - openedDate
      - status
    BuildsResponse:
      type: object
      properties:
        id:
          type: integer
        project:
          type: integer
        product:
          type: integer
        branch:
          type: integer
        execution:
          type: integer
        name:
          type: string
        scmPath:
          type: string
        filePath:
          type: string
        desc:
          type: string
        builder:
          type: string
        date:
          type: string
          format: date
      required:
      - id
      - project
      - product
      - branch
      - execution
      - name
      - scmPath
      - filePath
      - desc
      - builder
      - date
    ExecutionsResponse:
      type: object
      properties:
        id:
          type: integer
        project:
          type: integer
        name:
          type: string
        code:
          type: string
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        days:
          type: integer
        lifetime:
          type: string
        PO:
          type: string
        PM:
          type: string
        QD:
          type: string
        RD:
          type: string
        teamMembers:
          type: array
        desc:
          type: string
        acl:
          type: string
        whitelist:
          type: array
        openedBy:
          type: string
        openedDate:
          type: string
          format: date-time
      required:
      - id
      - project
      - name
      - code
      - begin
      - end
      - desc
      - acl
      - openedBy
      - openedDate
    ExecutionsBuildsResponse:
      type: object
      properties:
        total:
          type: integer
        builds:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              project:
                type: integer
              product:
                type: integer
              branch:
                type: integer
              execution:
                type: integer
              name:
                type: string
              scmPath:
                type: string
              filePath:
                type: string
              date:
                type: string
                format: date
              builder:
                type: string
              desc:
                type: string
            required:
            - id
            - project
            - product
            - branch
            - execution
            - name
            - date
            - builder
            - desc
      required:
      - total
      - builds
    ExecutionsStoriesResponse:
      type: object
      properties:
        page:
          type: integer
        total:
          type: integer
        limit:
          type: integer
        stories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              product:
                type: integer
              branch:
                type: integer
              module:
                type: integer
              fromBug:
                type: integer
              source:
                type: string
              sourceNote:
                type: string
              title:
                type: string
              category:
                type: string
              stage:
                type: string
              pri:
                type: integer
              estimate:
                type: integer
              status:
                type: string
              openedBy:
                type: string
              openedDate:
                type: string
                format: date-time
              toBug:
                type: integer
            required:
            - id
            - product
            - branch
            - module
            - fromBug
            - source
            - sourceNote
            - title
            - category
            - stage
            - pri
            - estimate
            - status
            - openedBy
            - openedDate
            - toBug
      required:
      - page
      - total
      - limit
      - stories
    ExecutionsTasksResponse:
      type: object
      properties:
        page:
          type: integer
        total:
          type: integer
        limit:
          type: integer
        tasks:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              project:
                type: integer
              execution:
                type: integer
              module:
                type: integer
              story:
                type: integer
              name:
                type: string
              type:
                type: string
              pri:
                type: integer
              estimate:
                type: number
              left:
                type: number
              deadline:
                type: string
                format: date
              consumed:
                type: number
              status:
                type: string
              desc:
                type: string
              openedBy:
                type: string
              openedDate:
                type: string
                format: date-time
              assignedTo:
                type: string
              estStarted:
                type: string
                format: date
              realStarted:
                type: string
                format: date-time
              finishedBy:
                type: string
              finishedDate:
                type: string
                format: date-time
              closedBy:
                type: string
              closedDate:
                type: string
                format: date-time
              mailto:
                type: array
            required:
            - id
            - project
            - execution
            - module
            - story
            - name
            - type
            - pri
            - estimate
            - left
            - deadline
            - consumed
            - status
            - desc
            - openedBy
            - openedDate
            - assignedTo
            - estStarted
            - realStarted
      required:
      - page
      - total
      - limit
      - tasks
    FeedbacksResponse:
      type: object
      properties:
        id:
          type: integer
        product:
          type: integer
        module:
          type: integer
        title:
          type: string
        type:
          type: string
        solution:
          type: string
        desc:
          type: string
        status:
          type: string
        subStatus:
          type: string
        public:
          type: integer
        notify:
          type: integer
        notifyEmail:
          type: string
        likes:
          type: string
        result:
          type: integer
        faq:
          type: integer
        openedBy:
          type: string
        openedDate:
          type: string
          format: date
        reviewedBy:
          type: string
        reviewedDate:
          type: string
          format: date-time
        processedBy:
          type: string
        processedDate:
          type: string
          format: date-time
        closedBy:
          type: string
        closedDate:
          type: string
          format: date-time
        closedReason:
          type: string
        editedBy:
          type: string
        editedDate:
          type: string
          format: date
        assignedTo:
          type: string
        assignedDate:
          type: string
          format: date
        feedbackBy:
          type: string
        mailto:
          type: array
        deleted:
          type: integer
        likesCount:
          type: integer
        productName:
          type: string
      required:
      - id
      - product
      - module
      - title
      - type
      - solution
      - desc
      - status
      - subStatus
      - public
      - notify
      - notifyEmail
      - likes
      - result
      - faq
      - openedBy
      - openedDate
      - reviewedBy
      - reviewedDate
      - processedBy
      - processedDate
      - closedBy
      - closedDate
      - closedReason
      - editedBy
      - editedDate
      - assignedTo
      - assignedDate
      - feedbackBy
      - mailto
      - deleted
      - likesCount
      - productName
    ProductplansResponse:
      type: object
      properties:
        id:
          type: integer
        product:
          type: integer
        branch:
          type: integer
        parent:
          type: integer
        title:
          type: string
        desc:
          type: string
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        stories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              title:
                type: string
              product:
                type: integer
              branch:
                type: integer
              category:
                type: string
              pri:
                type: integer
            required:
            - id
            - title
            - product
            - branch
            - category
            - pri
        bugs:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              product:
                type: integer
              branch:
                type: integer
              module:
                type: integer
              execution:
                type: integer
              story:
                type: integer
              title:
                type: string
              severity:
                type: integer
              pri:
                type: integer
              type:
                type: string
              steps:
                type: string
              status:
                type: string
            required:
            - id
            - product
            - branch
            - module
            - execution
            - story
            - title
            - severity
            - pri
            - type
            - steps
            - status
      required:
      - id
      - product
      - branch
      - parent
      - title
      - desc
      - begin
      - end
      - stories
      - bugs
    ProductsResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        code:
          type: string
        program:
          type: integer
        line:
          type: integer
        type:
          type: string
        PO:
          type: string
        QD:
          type: string
        RD:
          type: string
        desc:
          type: object
        acl:
          type: string
        whitelist:
          type: array
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
      required:
      - id
      - name
      - code
      - program
      - line
      - type
      - acl
      - createdBy
      - createdDate
    ProductsBugsResponse:
      type: object
      properties:
        page:
          type: integer
        total:
          type: integer
        limit:
          type: integer
        bugs:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              product:
                type: integer
              branch:
                type: integer
              module:
                type: integer
              project:
                type: integer
              execution:
                type: integer
              toTask:
                type: integer
              toStory:
                type: integer
              title:
                type: string
              keywords:
                type: string
              severity:
                type: integer
              pri:
                type: integer
              type:
                type: string
              os:
                type: string
              browser:
                type: string
              steps:
                type: string
              task:
                type: integer
              story:
                type: integer
              openedBy:
                type: string
              openedDate:
                type: string
                format: date-time
              deadline:
                type: string
                format: date
              assignedTo:
                type: string
              assignedDate:
                type: string
                format: date-time
              resolvedBy:
                type: string
              resolvedDate:
                type: string
                format: date-time
              resolvedBuild:
                type: string
              closedBy:
                type: string
              closedDate:
                type: string
                format: date-time
            required:
            - id
            - product
            - branch
            - module
            - project
            - execution
            - toTask
            - toStory
            - title
            - keywords
            - severity
            - pri
            - type
            - steps
            - openedBy
            - openedDate
      required:
      - page
      - total
      - limit
      - bugs
    ProductsPlansResponse:
      type: object
      properties:
        page:
          type: integer
        total:
          type: integer
        limit:
          type: integer
        plans:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              product:
                type: integer
              branch:
                type: integer
              title:
                type: string
              desc:
                type: string
              begin:
                type: string
                format: date
              end:
                type: string
                format: date
            required:
            - id
            - product
            - branch
            - title
            - desc
            - begin
            - end
      required:
      - page
      - total
      - limit
      - plans
    ProductsReleasesResponse:
      type: object
      properties:
        total:
          type: integer
        releases:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              project:
                type: integer
              product:
                type: integer
              branch:
                type: integer
              build:
                type: integer
              name:
                type: string
              date:
                type: string
                format: date
              desc:
                type: string
              status:
                type: string
      required:
      - total
      - releases
    ProductsStoriesResponse:
      type: object
      properties:
        page:
          type: integer
        total:
          type: integer
        limit:
          type: integer
        stories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              product:
                type: integer
              branch:
                type: integer
              module:
                type: integer
              fromBug:
                type: integer
              source:
                type: string
              sourceNote:
                type: string
              title:
                type: string
              category:
                type: string
              stage:
                type: string
              pri:
                type: integer
              estimate:
                type: integer
              status:
                type: string
              openedBy:
                type: string
              openedDate:
                type: string
                format: date-time
              toBug:
                type: integer
            required:
            - id
            - product
            - branch
            - module
            - fromBug
            - source
            - sourceNote
            - title
            - category
            - stage
            - pri
            - estimate
            - status
            - openedBy
            - openedDate
            - toBug
      required:
      - page
      - total
      - limit
      - stories
    ProductsTestcasesResponse:
      type: object
      properties:
        page:
          type: integer
        total:
          type: integer
        limit:
          type: integer
        testcases:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              product:
                type: integer
              branch:
                type: integer
              module:
                type: integer
              story:
                type: integer
              storyVersion:
                type: integer
              title:
                type: string
              precondition:
                type: string
              keywords:
                type: string
              pri:
                type: integer
              type:
                type: string
              stage:
                type: string
              status:
                type: string
              openedBy:
                type: string
              openedDate:
                type: string
                format: date-time
              fromBug:
                type: integer
              fromCaseID:
                type: integer
            required:
            - id
            - product
            - pri
            - type
            - stage
            - status
            - openedBy
            - openedDate
      required:
      - page
      - total
      - limit
      - testcases
    ProgramsResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        PM:
          type: string
        budget:
          type: integer
        budgetUnit:
          type: string
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        realBegan:
          type: string
          format: date
        realEnd:
          type: string
          format: date
        desc:
          type: string
        acl:
          type: string
        whitelist:
          type: array
        openedBy:
          type: string
        openedDate:
          type: string
          format: date-time
      required:
      - id
      - name
      - PM
      - budget
      - budgetUnit
      - begin
      - end
      - realBegan
      - realEnd
      - desc
      - acl
      - whitelist
      - openedBy
      - openedDate
    ProjectsResponse:
      type: object
      properties:
        id:
          type: integer
        parent:
          type: integer
        model:
          type: string
        budget:
          type: integer
        budgetUnit:
          type: string
        name:
          type: string
        code:
          type: string
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        realBegan:
          type: string
          format: date
        realEnd:
          type: string
          format: date
        status:
          type: string
        desc:
          type: string
        openedBy:
          type: string
        openedDate:
          type: string
          format: date-time
        PM:
          type: string
        acl:
          type: string
        whitelist:
          type: array
      required:
      - id
      - parent
      - model
      - budget
      - budgetUnit
      - name
      - code
      - begin
      - end
      - realBegan
      - realEnd
      - status
      - desc
      - openedBy
      - openedDate
      - PM
      - acl
      - whitelist
    ProjectsBuildsResponse:
      type: object
      properties:
        total:
          type: integer
        builds:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              project:
                type: integer
              product:
                type: integer
              branch:
                type: integer
              execution:
                type: integer
              name:
                type: string
              scmPath:
                type: string
              filePath:
                type: string
              date:
                type: string
                format: date
              builder:
                type: string
              desc:
                type: string
            required:
            - id
            - project
            - product
            - branch
            - execution
            - name
            - date
            - builder
            - desc
      required:
      - total
      - builds
    ProjectsExecutionsResponse:
      type: object
      properties:
        page:
          type: integer
        total:
          type: integer
        limit:
          type: integer
        executions:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              code:
                type: string
              begin:
                type: string
                format: date
              end:
                type: string
                format: date
              status:
                type: string
              openedBy:
                type: string
              openedDate:
                type: string
                format: date-time
              progress:
                type: integer
            required:
            - id
            - name
            - code
            - begin
            - end
            - status
            - openedBy
            - openedDate
            - progress
      required:
      - page
      - total
      - limit
      - executions
    ProjectsReleasesResponse:
      type: object
      properties:
        total:
          type: integer
        releases:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              project:
                type: integer
              product:
                type: integer
              branch:
                type: integer
              build:
                type: integer
              name:
                type: string
              date:
                type: string
                format: date
              desc:
                type: string
              status:
                type: string
      required:
      - total
      - releases
    ProjectsStoriesResponse:
      type: object
      properties:
        page:
          type: integer
        total:
          type: integer
        limit:
          type: integer
        stories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              product:
                type: integer
              branch:
                type: integer
              module:
                type: integer
              fromBug:
                type: integer
              source:
                type: string
              sourceNote:
                type: string
              title:
                type: string
              category:
                type: string
              stage:
                type: string
              pri:
                type: integer
              estimate:
                type: integer
              status:
                type: string
              openedBy:
                type: string
              openedDate:
                type: string
                format: date-time
              toBug:
                type: integer
            required:
            - id
            - product
            - branch
            - module
            - fromBug
            - source
            - sourceNote
            - title
            - category
            - stage
            - pri
            - estimate
            - status
            - openedBy
            - openedDate
            - toBug
      required:
      - page
      - total
      - limit
      - stories
    ProjectsTesttasksResponse:
      type: object
      properties:
        page:
          type: integer
        total:
          type: integer
        limit:
          type: integer
        testtasks:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              project:
                type: integer
              product:
                type: integer
              name:
                type: string
              execution:
                type: integer
              build:
                type: integer
              type:
                type: string
              owner:
                type: string
              pri:
                type: integer
              begin:
                type: string
                format: date
              end:
                type: string
                format: date
              desc:
                type: string
              status:
                type: string
              branch:
                type: integer
            required:
            - id
            - project
            - product
            - name
            - execution
            - build
            - desc
            - status
            - branch
      required:
      - page
      - total
      - limit
      - testtasks
    StoriesResponse:
      type: object
      properties:
        id:
          type: integer
        product:
          type: integer
        branch:
          type: integer
        module:
          type: integer
        fromBug:
          type: integer
        source:
          type: string
        sourceNote:
          type: string
        title:
          type: string
        category:
          type: string
        stage:
          type: string
        pri:
          type: integer
        estimate:
          type: number
        verify:
          type: string
        status:
          type: string
        openedBy:
          type: string
        openedDate:
          type: string
          format: date-time
        toBug:
          type: integer
      required:
      - id
      - product
      - branch
      - module
      - fromBug
      - source
      - sourceNote
      - title
      - category
      - stage
      - pri
      - estimate
      - verify
      - status
      - openedBy
      - openedDate
      - toBug
    TasksResponse:
      type: object
      properties:
        id:
          type: integer
        project:
          type: integer
        parent:
          type: integer
        execution:
          type: integer
        module:
          type: integer
        story:
          type: integer
        fromBug:
          type: integer
        name:
          type: string
        type:
          type: string
        pri:
          type: integer
        estimate:
          type: number
        consumed:
          type: number
        left:
          type: number
        deadline:
          type: string
          format: date
        status:
          type: string
        desc:
          type: string
        openedBy:
          type: string
        openedDate:
          type: string
          format: date-time
        assignedTo:
          type: string
        assignedDate:
          type: string
          format: date-time
        estStarted:
          type: string
          format: date
        realStarted:
          type: string
          format: date-time
        finishedBy:
          type: string
        finishedDate:
          type: string
          format: date-time
        closedBy:
          type: string
        closedDate:
          type: string
          format: date-time
      required:
      - id
      - project
      - parent
      - execution
      - module
      - story
      - fromBug
      - name
      - type
      - pri
      - estimate
      - consumed
      - left
      - deadline
      - status
      - desc
      - openedBy
      - openedDate
      - assignedTo
      - assignedDate
      - estStarted
    TestcasesResponse:
      type: object
      properties:
        id:
          type: integer
        product:
          type: integer
        branch:
          type: integer
        module:
          type: integer
        story:
          type: integer
        storyVersion:
          type: integer
        title:
          type: string
        precondition:
          type: string
        pri:
          type: integer
        type:
          type: string
        stage:
          type: string
        steps:
          type: array
          items:
            type: object
            properties:
              desc:
                type: string
              expect:
                type: string
            required:
            - desc
            - expect
        fromBug:
          type: integer
        fromCaseID:
          type: integer
        openedBy:
          type: string
        openedDate:
          type: string
          format: date-time
        status:
          type: string
      required:
      - id
      - product
      - branch
      - module
      - story
      - storyVersion
      - title
      - precondition
      - pri
      - type
      - stage
      - steps
      - openedBy
      - openedDate
    TesttasksResponse:
      type: object
      properties:
        id:
          type: integer
        project:
          type: integer
        product:
          type: integer
        name:
          type: string
        execution:
          type: integer
        build:
          type: integer
        type:
          type: string
        owner:
          type: string
        pri:
          type: integer
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        desc:
          type: string
      required:
      - id
      - project
      - product
      - name
      - execution
      - build
    TicketsResponse:
      type: object
      properties:
        id:
          type: integer
        product:
          type: integer
        module:
          type: integer
        title:
          type: string
        type:
          type: string
        desc:
          type: string
        openedBuild:
          type: string
        feedback:
          type: string
        assignedTo:
          type: string
        assignedDate:
          type: string
          format: date
        realStarted:
          type: string
          format: date
        startedBy:
          type: string
        startedDate:
          type: string
          format: date
        deadline:
          type: string
          format: date
        pri:
          type: integer
        estimate:
          type: string
        left:
          type: string
        status:
          type: string
        openedBy:
          type: object
        openedDate:
          type: string
          format: date
        activatedCount:
          type: integer
        closedBy:
          type: string
        closedDate:
          type: string
          format: date
        closedReason:
          type: string
        finishedBy:
          type: string
        finishedDate:
          type: string
          format: date
        resolvedBy:
          type: string
        resolvedDate:
          type: string
          format: date
        resolution:
          type: string
        editedBy:
          type: string
        editedDate:
          type: string
          format: date
        keywords:
          type: string
        repeatTicket:
          type: integer
        mailto:
          type: array
        deleted:
          type: string
        consumed:
          type: string
      required:
      - id
      - product
      - module
      - title
      - type
      - desc
      - openedBuild
      - feedback
      - assignedTo
      - assignedDate
      - realStarted
      - startedBy
      - startedDate
      - deadline
      - pri
      - estimate
      - left
      - status
      - openedBy
      - openedDate
      - activatedCount
      - closedBy
      - closedDate
      - closedReason
      - finishedBy
      - finishedDate
      - resolvedBy
      - resolvedDate
      - resolution
      - editedBy
      - editedDate
      - keywords
      - repeatTicket
      - mailto
      - deleted
      - consumed
    UserResponse:
      type: object
      properties:
        profile:
          type: object
          properties:
            id:
              type: integer
            type:
              type: string
            dept:
              type: integer
            account:
              type: string
            realname:
              type: string
            nickname:
              type: string
            avatar:
              type: string
            birthday:
              type: string
              format: date
            gender:
              type: string
            mobile:
              type: string
            phone:
              type: string
            weixin:
              type: string
            address:
              type: string
            join:
              type: string
              format: date
            admin:
              type: boolean
          required:
          - id
          - type
          - dept
          - account
          - realname
          - admin
      required:
      - profile
    UsersResponse:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
        dept:
          type: integer
        account:
          type: string
        role:
          type: string
        realname:
          type: string
        nickname:
          type: string
        avatar:
          type: string
        birthday:
          type: string
          format: date
        gender:
          type: string
        email:
          type: string
        mobile:
          type: string
        phone:
          type: string
        weixin:
          type: string
        join:
          type: string
          format: date
      required:
      - id
      - type
      - dept
      - account
      - role
      - realname
    CreateExecutionsTasksResponse:
      type: object
      properties:
        module:
          type: integer
        story:
          type: integer
        fromBug:
          type: integer
        name:
          type: string
        type:
          type: string
        assignedTo:
          type: array
        pri:
          type: integer
        estimate:
          type: number
        estStarted:
          type: string
          format: date
        deadline:
          type: string
          format: date
        openedBy:
          type: string
        openedDate:
          type: string
          format: date-time
      required:
      - name
      - type
      - assignedTo
      - estStarted
      - deadline
      - openedBy
      - openedDate
    CreateFeedbacksResponse:
      type: object
      properties:
        product:
          type: integer
        module:
          type: integer
        title:
          type: string
        type:
          type: string
        desc:
          type: string
        public:
          type: integer
        notify:
          type: integer
        notifyEmail:
          type: string
        feedbackBy:
          type: string
      required:
      - product
      - title
    CreateFeedbacksAssignResponse:
      type: object
      properties:
        assignedTo:
          type: string
        comment:
          type: string
        mailto:
          type: string
    CreateFeedbacksCloseResponse:
      type: object
      properties:
        closedReason:
          type: string
        comment:
          type: string
    CreateProductplansLinkstoriesResponse:
      type: object
      properties:
        stories:
          type: array
    CreateProductplansUnlinkbugsResponse:
      type: object
      properties:
        bugs:
          type: array
      required:
      - bugs
    CreateProductplansUnlinkstoriesResponse:
      type: object
      properties:
        stories:
          type: array
      required:
      - stories
    CreateProductsResponse:
      type: object
      properties:
        name:
          type: string
        program:
          type: integer
        code:
          type: integer
        line:
          type: integer
        PO:
          type: string
        QD:
          type: string
        RD:
          type: string
        type:
          type: string
        desc:
          type: string
        acl:
          type: string
        whitelist:
          type: array
      required:
      - name
      - code
    CreateProductsBugsResponse:
      type: object
      properties:
        branch:
          type: integer
        module:
          type: integer
        execution:
          type: integer
        title:
          type: string
        keywords:
          type: string
        severity:
          type: integer
        pri:
          type: integer
        type:
          type: string
        os:
          type: string
        browser:
          type: string
        steps:
          type: string
        task:
          type: integer
        story:
          type: integer
        deadline:
          type: string
          format: date
        openedBuild:
          type: array
      required:
      - title
      - severity
      - pri
      - type
    CreateProductsLinkBugsResponse:
      type: object
      properties:
        id:
          type: integer
        product:
          type: integer
        branch:
          type: integer
        parent:
          type: integer
        title:
          type: string
        desc:
          type: string
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        stories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              title:
                type: string
              product:
                type: integer
              branch:
                type: integer
              category:
                type: string
              pri:
                type: integer
            required:
            - id
            - title
            - product
            - branch
            - category
            - pri
        bugs:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              product:
                type: integer
              branch:
                type: integer
              module:
                type: integer
              execution:
                type: integer
              story:
                type: integer
              title:
                type: string
              severity:
                type: integer
              pri:
                type: integer
              type:
                type: string
              steps:
                type: string
              status:
                type: string
            required:
            - id
            - product
            - branch
            - module
            - execution
            - story
            - title
            - severity
            - pri
            - type
            - steps
            - status
      required:
      - id
      - product
      - branch
      - parent
      - title
      - desc
      - begin
      - end
      - stories
      - bugs
    CreateProductsLinkBugsRequest:
      type: object
      properties:
        bugs:
          type: array
      required:
      - bugs
    CreateProductsPlansResponse:
      type: object
      properties:
        branch:
          type: integer
        title:
          type: string
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        desc:
          type: string
        parent:
          type: integer
      required:
      - title
    CreateProductsTestcasesResponse:
      type: object
      properties:
        branch:
          type: integer
        module:
          type: integer
        story:
          type: integer
        title:
          type: string
        type:
          type: string
        stage:
          type: string
        precondition:
          type: string
        pri:
          type: integer
        steps:
          type: array
          items:
            type: object
            properties:
              desc:
                type: string
              expect:
                type: string
            required:
            - desc
            - expect
        keywords:
          type: string
      required:
      - title
      - type
      - steps
    CreateProgramsResponse:
      type: object
      properties:
        name:
          type: string
        parent:
          type: string
        PM:
          type: string
        budget:
          type: integer
        budgetUnit:
          type: string
        desc:
          type: string
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        acl:
          type: string
        whitelist:
          type: array
    CreateProjectsResponse:
      type: object
      properties:
        name:
          type: string
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        products:
          type: array
        code:
          type: string
        model:
          type: string
        parent:
          type: integer
      required:
      - name
      - begin
      - end
      - products
      - code
    CreateProjectsBuildsResponse:
      type: object
      properties:
        execution:
          type: integer
        product:
          type: integer
        branch:
          type: integer
        name:
          type: string
        builder:
          type: string
        date:
          type: string
          format: date
        scmPath:
          type: string
        filePath:
          type: string
        desc:
          type: string
      required:
      - execution
      - product
      - name
      - builder
    CreateProjectsExecutionsResponse:
      type: object
      properties:
        project:
          type: integer
        name:
          type: string
        code:
          type: string
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        days:
          type: integer
        lifetime:
          type: string
        PO:
          type: string
        PM:
          type: string
        QD:
          type: string
        RD:
          type: string
        teamMembers:
          type: array
        desc:
          type: string
        acl:
          type: string
        whitelist:
          type: array
      required:
      - project
      - name
      - code
      - begin
      - end
    CreateStoriesResponse:
      type: object
      properties:
        title:
          type: string
        product:
          type: integer
        pri:
          type: integer
        category:
          type: string
        spec:
          type: string
        verify:
          type: string
        source:
          type: string
        sourceNote:
          type: string
        estimate:
          type: number
        keywords:
          type: string
      required:
      - title
      - product
      - pri
      - category
    CreateStoriesChangeResponse:
      type: object
      properties:
        title:
          type: string
        spec:
          type: string
        verify:
          type: string
    CreateTicketsResponse:
      type: object
      properties:
        product:
          type: string
        module:
          type: string
        title:
          type: string
        type:
          type: string
      required:
      - product
      - module
      - title
    CreateTokensResponse:
      type: object
      properties:
        token:
          type: string
    CreateTokensRequest:
      type: object
      properties:
        account:
          type: string
        password:
          type: string
    CreateUsersResponse:
      type: object
      properties:
        account:
          type: string
        password:
          type: string
        realname:
          type: string
        visions:
          type: array
      required:
      - account
      - password
    UpdateBugsResponse:
      type: object
      properties:
        branch:
          type: integer
        module:
          type: integer
        execution:
          type: integer
        title:
          type: string
        keywords:
          type: string
        severity:
          type: integer
        pri:
          type: integer
        type:
          type: string
        os:
          type: string
        browser:
          type: string
        steps:
          type: string
        task:
          type: integer
        story:
          type: integer
        deadline:
          type: string
          format: date
        openedBuild:
          type: array
      required:
      - title
      - severity
      - pri
      - type
    UpdateBuildsResponse:
      type: object
      properties:
        id:
          type: integer
        project:
          type: integer
        product:
          type: integer
        branch:
          type: integer
        execution:
          type: integer
        name:
          type: string
        scmPath:
          type: string
        filePath:
          type: string
        desc:
          type: string
        builder:
          type: string
        date:
          type: string
          format: date
      required:
      - id
      - project
      - product
      - branch
      - execution
      - name
      - scmPath
      - filePath
      - desc
      - builder
      - date
    UpdateExecutionsResponse:
      type: object
      properties:
        project:
          type: integer
        name:
          type: string
        code:
          type: string
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        days:
          type: integer
        lifetime:
          type: string
        PO:
          type: string
        PM:
          type: string
        QD:
          type: string
        RD:
          type: string
        teamMembers:
          type: array
        desc:
          type: string
        acl:
          type: string
        whitelist:
          type: array
      required:
      - project
      - name
      - code
      - begin
      - end
    UpdateFeedbacksResponse:
      type: object
      properties:
        product:
          type: integer
        module:
          type: integer
        title:
          type: string
        type:
          type: string
        desc:
          type: string
        public:
          type: integer
        notify:
          type: integer
        notifyEmail:
          type: string
        feedbackBy:
          type: string
    UpdateProductplansResponse:
      type: object
      properties:
        branch:
          type: integer
        title:
          type: string
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        desc:
          type: string
      required:
      - title
    UpdateProductResponse:
      type: object
      properties:
        name:
          type: string
        code:
          type: string
        type:
          type: string
        line:
          type: integer
        program:
          type: integer
        status:
          type: string
        desc:
          type: string
    UpdateProgramsResponse:
      type: object
      properties:
        name:
          type: string
        parent:
          type: string
        PM:
          type: string
        budget:
          type: integer
        budgetUnit:
          type: string
        desc:
          type: string
        begin:
          type: string
          format: date
        end:
          type: string
          format: date
        acl:
          type: string
        whitelist:
          type: array
    UpdateProjectsResponse:
      type: object
      properties:
        name:
          type: string
        code:
          type: string
        parent:
          type: integer
        PM:
          type: integer
        budget:
          type: integer
        budgetUnit:
          type: string
        days:
          type: integer
        desc:
          type: string
        acl:
          type: string
        whitelist:
          type: array
        auth:
          type: string
    UpdateStoriesResponse:
      type: object
      properties:
        module:
          type: integer
        source:
          type: string
        sourceNote:
          type: string
        pri:
          type: integer
        category:
          type: string
        estimate:
          type: number
        keywords:
          type: string
    UpdateTasksResponse:
      type: object
      properties:
        module:
          type: integer
        story:
          type: integer
        fromBug:
          type: integer
        name:
          type: string
        type:
          type: string
        assignedTo:
          type: array
        pri:
          type: integer
        estimate:
          type: number
        estStarted:
          type: string
          format: date
        deadline:
          type: string
          format: date
    UpdateTestcasesResponse:
      type: object
      properties:
        branch:
          type: integer
        module:
          type: integer
        story:
          type: integer
        title:
          type: string
        type:
          type: string
        stage:
          type: string
        precondition:
          type: string
        pri:
          type: integer
        steps:
          type: array
          items:
            type: object
            properties:
              desc:
                type: string
              expect:
                type: string
        keywords:
          type: string
    UpdateTicketsResponse:
      type: object
      properties:
        product:
          type: integer
        module:
          type: integer
        title:
          type: string
        type:
          type: string
        desc:
          type: string
      required:
      - product
      - module
      - title
    UpdateUsersResponse:
      type: object
      properties:
        dept:
          type: integer
        role:
          type: string
        mobile:
          type: string
        realname:
          type: string
        email:
          type: string
        phone:
          type: string
  securitySchemes:
    TokenAuth:
      type: apiKey
      in: query
      name: Token
      description: 禅道API认证Token
security:
- TokenAuth: []
tags:
- name: bugs
  description: bugs 相关接口
- name: builds
  description: builds 相关接口
- name: executions
  description: executions 相关接口
- name: feedbacks
  description: feedbacks 相关接口
- name: product
  description: product 相关接口
- name: productplans
  description: productplans 相关接口
- name: products
  description: products 相关接口
- name: productsplan
  description: productsplan 相关接口
- name: programs
  description: programs 相关接口
- name: projects
  description: projects 相关接口
- name: stories
  description: stories 相关接口
- name: tasks
  description: tasks 相关接口
- name: testcases
  description: testcases 相关接口
- name: testtasks
  description: testtasks 相关接口
- name: tickets
  description: tickets 相关接口
- name: tokens
  description: tokens 相关接口
- name: user
  description: user 相关接口
- name: users
  description: users 相关接口
